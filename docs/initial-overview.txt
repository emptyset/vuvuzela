initial overview

[application flow]

this describes the flow of the door-logger application from its initial, "found" state.  
as the application evolves, this document will become obsolete.

- the door-logger application records events fired from the Viking ES-1 [0] via serial port into tammy at /dev/ttys0
- the application is launched by a shell script which invokes a python program, DoorLoggerd.py
- DoorLoggerd launches itself as a detached process, in a pattern that is referenced in the code
- DoorLoggerd wants to be a background service, listening for events from /dev/ttys0
- when an event is fired, DoorLoggerd parses the incoming string per the specification [0]
- DoorLoggerd records these events and any errors in the /var/log/syslog file
- after the initial string is read from the serial port /dev/ttys0, DoorLoggerd delegates further control to AccessHandler
- AccessHandler is launched as a separate detached process as well
- two separate functions are called, one to twitter and one to play a user-specific sound
- twitter is invoked using a third-party module/library, using oauth
- the update message is "Granted: <alias>" where <alias> is pulled from a mysql database table "freesidemembers"
- the play sound function looks in a hard-coded directory for a sound file that matches the card id, and plays 12 seconds of it
- if a sound doesn't exist, it plays the default sound
- if a user is not granted access, another sound is played

[0] http://www.vikingelectronics.com/products/pdf/es-1.pdf -or- ~emptyset/public/viking.es-1.pdf
